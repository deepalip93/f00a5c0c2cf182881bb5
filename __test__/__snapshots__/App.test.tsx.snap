// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CButton.test /> render 1`] = `
<RCTScrollView
  style={
    Object {
      "flex": 1,
      "padding": "2%",
      "paddingBottom": "5%",
      "paddingTop": "10%",
    }
  }
>
  <View>
    <View
      style={Object {}}
    >
      <View
        pointerEvents="none"
        style={
          Array [
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 6,
            },
            Object {
              "backgroundColor": "#f6f6f6",
              "borderColor": "rgba(0, 0, 0, 0.54)",
              "borderRadius": 4,
              "borderWidth": 1,
            },
          ]
        }
        testID="text-input-outline"
      />
      <View>
        <View
          style={
            Array [
              Object {
                "paddingBottom": 0,
              },
              Object {
                "minHeight": 64,
                "paddingTop": 8,
              },
            ]
          }
        >
          <TextInput
            editable={true}
            maxFontSizeMultiplier={1.5}
            multiline={false}
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            placeholder="Enter No Of Lots"
            placeholderTextColor="rgba(0, 0, 0, 0.54)"
            selectionColor="#6200ee"
            style={
              Array [
                Object {
                  "flexGrow": 1,
                  "margin": 0,
                  "paddingHorizontal": 14,
                  "zIndex": 1,
                },
                Object {
                  "height": 56,
                },
                Object {
                  "paddingBottom": 0,
                  "paddingTop": 0,
                },
                Object {
                  "color": "#000000",
                  "fontFamily": "System",
                  "fontSize": 16,
                  "fontWeight": undefined,
                  "textAlign": "left",
                  "textAlignVertical": "center",
                },
                false,
                Array [
                  Object {},
                ],
              ]
            }
            testID="parking-create-text-input"
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
      </View>
    </View>
    <View
      collapsable={false}
      style={
        Object {
          "alignSelf": "center",
          "backgroundColor": "rgba(0, 0, 0, 0.12)",
          "borderColor": "transparent",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "elevation": 0,
          "margin": "2%",
          "minWidth": 64,
          "shadowColor": "#000000",
          "shadowOffset": Object {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 4,
            },
          ]
        }
        testID="parking-create-submit-button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <Text
            numberOfLines={1}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontFamily": "System",
                  "fontWeight": "400",
                },
                Object {
                  "textAlign": "left",
                },
                Array [
                  Object {
                    "letterSpacing": 1,
                    "marginHorizontal": 16,
                    "marginVertical": 9,
                    "textAlign": "center",
                  },
                  undefined,
                  Object {
                    "textTransform": "uppercase",
                  },
                  Object {
                    "color": "rgba(0, 0, 0, 0.32)",
                    "fontFamily": "System",
                    "fontWeight": "500",
                  },
                  Object {
                    "fontFamily": "System",
                    "fontWeight": "500",
                  },
                  undefined,
                ],
              ]
            }
          >
            <Text>
              Create Parking Lots
            </Text>
          </Text>
        </View>
      </View>
    </View>
    <View
      collapsable={false}
      style={
        Object {
          "alignSelf": "center",
          "backgroundColor": "white",
          "borderColor": "rgba(0, 0, 0, 0.12)",
          "borderRadius": 4,
          "elevation": 1,
          "marginTop": "5%",
          "shadowColor": "#000000",
          "shadowOffset": Object {
            "height": 0.5,
            "width": 0,
          },
          "shadowOpacity": 0.24,
          "shadowRadius": 0.75,
          "width": "100%",
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flexGrow": 1,
            "flexShrink": 1,
          }
        }
      >
        <RCTScrollView
          data={Array []}
          getItem={[Function]}
          getItemCount={[Function]}
          index={0}
          keyExtractor={[Function]}
          onContentSizeChange={[Function]}
          onLayout={[Function]}
          onMomentumScrollBegin={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          siblings={Array []}
          stickyHeaderIndices={Array []}
          total={1}
          viewabilityConfigCallbackPairs={Array []}
        >
          <View />
        </RCTScrollView>
      </View>
    </View>
    <Modal
      hardwareAccelerated={false}
      testID="deregister-car-registration"
      transparent={true}
      visible={false}
    />
  </View>
</RCTScrollView>
`;
